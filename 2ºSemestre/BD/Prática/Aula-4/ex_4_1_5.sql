-- Exercise 4.1.5

DROP TABLE IF EXISTS CONFERENCES.REL_ARTICLE_AUTHOR;
DROP TABLE IF EXISTS CONFERENCES.NOT_STUDENT;
DROP TABLE IF EXISTS CONFERENCES.STUDENT;
DROP TABLE IF EXISTS CONFERENCES.PARTICIPANT;
DROP TABLE IF EXISTS CONFERENCES.AUTHOR;
DROP TABLE IF EXISTS CONFERENCES.PERSON;
DROP TABLE IF EXISTS CONFERENCES.INSTITUTION;
DROP TABLE IF EXISTS CONFERENCES.SCIENTIFIC_ARTICLE;
DROP SCHEMA IF EXISTS CONFERENCES;
GO

CREATE SCHEMA CONFERENCES;
GO

CREATE TABLE CONFERENCES.SCIENTIFIC_ARTICLE (
    register_number             INT             NOT NULL    PRIMARY KEY,
    title                       VARCHAR(250)    NOT NULL
);

CREATE TABLE CONFERENCES.INSTITUTION (
    address                     VARCHAR(250)    NOT NULL    PRIMARY KEY,
    name                        VARCHAR(250)    NOT NULL
);

CREATE TABLE CONFERENCES.PERSON (
    email                       VARCHAR(250)    NOT NULL    PRIMARY KEY,
    name                        VARCHAR(250)    NOT NULL
);

CREATE TABLE CONFERENCES.AUTHOR (
    PERSON_email                VARCHAR(250)    NOT NULL    PRIMARY KEY,
    INSTITUTION_address         VARCHAR(250)    NOT NULL,

    FOREIGN KEY (PERSON_email) REFERENCES CONFERENCES.PERSON(email) ON UPDATE CASCADE,
    FOREIGN KEY (INSTITUTION_address) REFERENCES CONFERENCES.INSTITUTION(address) ON UPDATE CASCADE
);

CREATE TABLE CONFERENCES.PARTICIPANT (
    PERSON_email                VARCHAR(250)    NOT NULL    PRIMARY KEY,
    registration_date           DATE            NOT NULL,
    address                     VARCHAR(250),
    registration_cost           INT             NOT NULL    DEFAULT 0,

    FOREIGN KEY (PERSON_email) REFERENCES CONFERENCES.PERSON(email) ON UPDATE CASCADE
);

CREATE TABLE CONFERENCES.STUDENT (
    PARTICIPANT_email           VARCHAR(250)    NOT NULL    PRIMARY KEY,
    payment_receipt             VARCHAR(500)    NOT NULL,

    FOREIGN KEY (PARTICIPANT_email) REFERENCES CONFERENCES.PARTICIPANT(PERSON_email) ON UPDATE CASCADE
);

CREATE TABLE CONFERENCES.NOT_STUDENT (
    PARTICIPANT_email           VARCHAR(250)    NOT NULL    PRIMARY KEY,
    transaction_reference       VARCHAR(250)    NOT NULL,

    FOREIGN KEY (PARTICIPANT_email) REFERENCES CONFERENCES.PARTICIPANT(PERSON_email) ON UPDATE CASCADE
);

CREATE TABLE CONFERENCES.REL_ARTICLE_AUTHOR (
    SCIENTIFIC_ART_reg_number   INT             NOT NULL,
    AUTHOR_email                 VARCHAR(250)    NOT NULL,

    PRIMARY KEY (SCIENTIFIC_ART_reg_number, AUTHOR_email),
    FOREIGN KEY (SCIENTIFIC_ART_reg_number) REFERENCES CONFERENCES.SCIENTIFIC_ARTICLE(register_number),
    FOREIGN KEY (AUTHOR_email) REFERENCES CONFERENCES.AUTHOR(PERSON_email) ON UPDATE CASCADE
);