// Generated from /home/tiago/UA/2 Ano/2 Semestre/C/PFinal/c2023-adv-02/src/adv.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class advLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		T__73=74, Number=75, ID=76, SYMBOL=77, STRING=78, WS=79, NEWLINE=80, SingleLineComment=81, 
		BlockComment=82, ERROR=83;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
			"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
			"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
			"T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
			"T__73", "Number", "ID", "SYMBOL", "STRING", "WS", "NEWLINE", "SingleLineComment", 
			"BlockComment", "ERROR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'import'", "'alphabet'", "'{'", "','", "'}'", "'-'", "'NFA'", 
			"'<<<'", "'>>>'", "'complete'", "'DFA'", "'for'", "'in'", "'while'", 
			"'do'", "'if'", "'else'", "'state'", "';'", "'['", "'='", "']'", "'transition'", 
			"'->'", "'view'", "'of'", "'as'", "'--'", "'#label'", "'<'", "'>'", "'place'", 
			"'at'", "'grid'", "'animation'", "'viewport'", "'++'", "'on'", "'update'", 
			"'show'", "'pause'", "'play'", "'+'", "'not'", "'*'", "'/'", "'%'", "'>='", 
			"'<='", "'=='", "'!='", "'and'", "'or'", "'('", "')'", "'read'", "'[prompt='", 
			"'{{'", "'}}'", "':'", "'number'", "'point'", "'list'", "'string'", "'boolean'", 
			"'step'", "'margin'", "'color'", "'line'", "'initial'", "'accepting'", 
			"'align'", "'slope'", "'highlighted'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, "Number", "ID", "SYMBOL", "STRING", "WS", "NEWLINE", 
			"SingleLineComment", "BlockComment", "ERROR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public advLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "adv.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2U\u0253\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3"+
		"\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n"+
		"\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3"+
		"\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3"+
		"\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3"+
		"\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\3#\3#"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3\'"+
		"\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3"+
		"+\3+\3+\3,\3,\3-\3-\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\61\3\62\3"+
		"\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3"+
		"\66\3\67\3\67\38\38\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3:\3:\3:\3;\3;\3"+
		";\3<\3<\3<\3=\3=\3>\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3@\3@\3@\3@\3"+
		"@\3A\3A\3A\3A\3A\3A\3A\3B\3B\3B\3B\3B\3B\3B\3B\3C\3C\3C\3C\3C\3D\3D\3"+
		"D\3D\3D\3D\3D\3E\3E\3E\3E\3E\3E\3F\3F\3F\3F\3F\3G\3G\3G\3G\3G\3G\3G\3"+
		"G\3H\3H\3H\3H\3H\3H\3H\3H\3H\3H\3I\3I\3I\3I\3I\3I\3J\3J\3J\3J\3J\3J\3"+
		"K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3K\3L\5L\u0202\nL\3L\6L\u0205\nL\rL\16"+
		"L\u0206\3L\3L\6L\u020b\nL\rL\16L\u020c\5L\u020f\nL\3M\3M\7M\u0213\nM\f"+
		"M\16M\u0216\13M\3N\3N\7N\u021a\nN\fN\16N\u021d\13N\3N\3N\3O\3O\7O\u0223"+
		"\nO\fO\16O\u0226\13O\3O\3O\3P\6P\u022b\nP\rP\16P\u022c\3P\3P\3Q\5Q\u0232"+
		"\nQ\3Q\3Q\3Q\3Q\3R\3R\3R\7R\u023b\nR\fR\16R\u023e\13R\3R\3R\3R\3R\3S\3"+
		"S\3S\3S\7S\u0248\nS\fS\16S\u024b\13S\3S\3S\3S\3S\3S\3T\3T\5\u0224\u023c"+
		"\u0249\2U\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65"+
		"i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008b"+
		"G\u008dH\u008fI\u0091J\u0093K\u0095L\u0097M\u0099N\u009bO\u009dP\u009f"+
		"Q\u00a1R\u00a3S\u00a5T\u00a7U\3\2\t\4\2--//\3\2\62;\4\2C\\c|\5\2\62;C"+
		"\\c|\3\2))\4\2\13\13\"\"\3\2\61\61\2\u025d\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2"+
		"\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2"+
		"\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2"+
		"\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M"+
		"\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2"+
		"\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2"+
		"\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s"+
		"\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177"+
		"\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2"+
		"\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091"+
		"\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2"+
		"\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3"+
		"\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\3\u00a9\3\2\2\2\5\u00b0\3\2\2"+
		"\2\7\u00b9\3\2\2\2\t\u00bb\3\2\2\2\13\u00bd\3\2\2\2\r\u00bf\3\2\2\2\17"+
		"\u00c1\3\2\2\2\21\u00c5\3\2\2\2\23\u00c9\3\2\2\2\25\u00cd\3\2\2\2\27\u00d6"+
		"\3\2\2\2\31\u00da\3\2\2\2\33\u00de\3\2\2\2\35\u00e1\3\2\2\2\37\u00e7\3"+
		"\2\2\2!\u00ea\3\2\2\2#\u00ed\3\2\2\2%\u00f2\3\2\2\2\'\u00f8\3\2\2\2)\u00fa"+
		"\3\2\2\2+\u00fc\3\2\2\2-\u00fe\3\2\2\2/\u0100\3\2\2\2\61\u010b\3\2\2\2"+
		"\63\u010e\3\2\2\2\65\u0113\3\2\2\2\67\u0116\3\2\2\29\u0119\3\2\2\2;\u011c"+
		"\3\2\2\2=\u0123\3\2\2\2?\u0125\3\2\2\2A\u0127\3\2\2\2C\u012d\3\2\2\2E"+
		"\u0130\3\2\2\2G\u0135\3\2\2\2I\u013f\3\2\2\2K\u0148\3\2\2\2M\u014b\3\2"+
		"\2\2O\u014e\3\2\2\2Q\u0155\3\2\2\2S\u015a\3\2\2\2U\u0160\3\2\2\2W\u0165"+
		"\3\2\2\2Y\u0167\3\2\2\2[\u016b\3\2\2\2]\u016d\3\2\2\2_\u016f\3\2\2\2a"+
		"\u0171\3\2\2\2c\u0174\3\2\2\2e\u0177\3\2\2\2g\u017a\3\2\2\2i\u017d\3\2"+
		"\2\2k\u0181\3\2\2\2m\u0184\3\2\2\2o\u0186\3\2\2\2q\u0188\3\2\2\2s\u018d"+
		"\3\2\2\2u\u0196\3\2\2\2w\u0199\3\2\2\2y\u019c\3\2\2\2{\u019e\3\2\2\2}"+
		"\u01a5\3\2\2\2\177\u01ab\3\2\2\2\u0081\u01b0\3\2\2\2\u0083\u01b7\3\2\2"+
		"\2\u0085\u01bf\3\2\2\2\u0087\u01c4\3\2\2\2\u0089\u01cb\3\2\2\2\u008b\u01d1"+
		"\3\2\2\2\u008d\u01d6\3\2\2\2\u008f\u01de\3\2\2\2\u0091\u01e8\3\2\2\2\u0093"+
		"\u01ee\3\2\2\2\u0095\u01f4\3\2\2\2\u0097\u0201\3\2\2\2\u0099\u0210\3\2"+
		"\2\2\u009b\u0217\3\2\2\2\u009d\u0220\3\2\2\2\u009f\u022a\3\2\2\2\u00a1"+
		"\u0231\3\2\2\2\u00a3\u0237\3\2\2\2\u00a5\u0243\3\2\2\2\u00a7\u0251\3\2"+
		"\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7o\2\2\u00ab\u00ac\7r\2\2\u00ac\u00ad"+
		"\7q\2\2\u00ad\u00ae\7t\2\2\u00ae\u00af\7v\2\2\u00af\4\3\2\2\2\u00b0\u00b1"+
		"\7c\2\2\u00b1\u00b2\7n\2\2\u00b2\u00b3\7r\2\2\u00b3\u00b4\7j\2\2\u00b4"+
		"\u00b5\7c\2\2\u00b5\u00b6\7d\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7v\2\2"+
		"\u00b8\6\3\2\2\2\u00b9\u00ba\7}\2\2\u00ba\b\3\2\2\2\u00bb\u00bc\7.\2\2"+
		"\u00bc\n\3\2\2\2\u00bd\u00be\7\177\2\2\u00be\f\3\2\2\2\u00bf\u00c0\7/"+
		"\2\2\u00c0\16\3\2\2\2\u00c1\u00c2\7P\2\2\u00c2\u00c3\7H\2\2\u00c3\u00c4"+
		"\7C\2\2\u00c4\20\3\2\2\2\u00c5\u00c6\7>\2\2\u00c6\u00c7\7>\2\2\u00c7\u00c8"+
		"\7>\2\2\u00c8\22\3\2\2\2\u00c9\u00ca\7@\2\2\u00ca\u00cb\7@\2\2\u00cb\u00cc"+
		"\7@\2\2\u00cc\24\3\2\2\2\u00cd\u00ce\7e\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0"+
		"\7o\2\2\u00d0\u00d1\7r\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3\7g\2\2\u00d3"+
		"\u00d4\7v\2\2\u00d4\u00d5\7g\2\2\u00d5\26\3\2\2\2\u00d6\u00d7\7F\2\2\u00d7"+
		"\u00d8\7H\2\2\u00d8\u00d9\7C\2\2\u00d9\30\3\2\2\2\u00da\u00db\7h\2\2\u00db"+
		"\u00dc\7q\2\2\u00dc\u00dd\7t\2\2\u00dd\32\3\2\2\2\u00de\u00df\7k\2\2\u00df"+
		"\u00e0\7p\2\2\u00e0\34\3\2\2\2\u00e1\u00e2\7y\2\2\u00e2\u00e3\7j\2\2\u00e3"+
		"\u00e4\7k\2\2\u00e4\u00e5\7n\2\2\u00e5\u00e6\7g\2\2\u00e6\36\3\2\2\2\u00e7"+
		"\u00e8\7f\2\2\u00e8\u00e9\7q\2\2\u00e9 \3\2\2\2\u00ea\u00eb\7k\2\2\u00eb"+
		"\u00ec\7h\2\2\u00ec\"\3\2\2\2\u00ed\u00ee\7g\2\2\u00ee\u00ef\7n\2\2\u00ef"+
		"\u00f0\7u\2\2\u00f0\u00f1\7g\2\2\u00f1$\3\2\2\2\u00f2\u00f3\7u\2\2\u00f3"+
		"\u00f4\7v\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7v\2\2\u00f6\u00f7\7g\2\2"+
		"\u00f7&\3\2\2\2\u00f8\u00f9\7=\2\2\u00f9(\3\2\2\2\u00fa\u00fb\7]\2\2\u00fb"+
		"*\3\2\2\2\u00fc\u00fd\7?\2\2\u00fd,\3\2\2\2\u00fe\u00ff\7_\2\2\u00ff."+
		"\3\2\2\2\u0100\u0101\7v\2\2\u0101\u0102\7t\2\2\u0102\u0103\7c\2\2\u0103"+
		"\u0104\7p\2\2\u0104\u0105\7u\2\2\u0105\u0106\7k\2\2\u0106\u0107\7v\2\2"+
		"\u0107\u0108\7k\2\2\u0108\u0109\7q\2\2\u0109\u010a\7p\2\2\u010a\60\3\2"+
		"\2\2\u010b\u010c\7/\2\2\u010c\u010d\7@\2\2\u010d\62\3\2\2\2\u010e\u010f"+
		"\7x\2\2\u010f\u0110\7k\2\2\u0110\u0111\7g\2\2\u0111\u0112\7y\2\2\u0112"+
		"\64\3\2\2\2\u0113\u0114\7q\2\2\u0114\u0115\7h\2\2\u0115\66\3\2\2\2\u0116"+
		"\u0117\7c\2\2\u0117\u0118\7u\2\2\u01188\3\2\2\2\u0119\u011a\7/\2\2\u011a"+
		"\u011b\7/\2\2\u011b:\3\2\2\2\u011c\u011d\7%\2\2\u011d\u011e\7n\2\2\u011e"+
		"\u011f\7c\2\2\u011f\u0120\7d\2\2\u0120\u0121\7g\2\2\u0121\u0122\7n\2\2"+
		"\u0122<\3\2\2\2\u0123\u0124\7>\2\2\u0124>\3\2\2\2\u0125\u0126\7@\2\2\u0126"+
		"@\3\2\2\2\u0127\u0128\7r\2\2\u0128\u0129\7n\2\2\u0129\u012a\7c\2\2\u012a"+
		"\u012b\7e\2\2\u012b\u012c\7g\2\2\u012cB\3\2\2\2\u012d\u012e\7c\2\2\u012e"+
		"\u012f\7v\2\2\u012fD\3\2\2\2\u0130\u0131\7i\2\2\u0131\u0132\7t\2\2\u0132"+
		"\u0133\7k\2\2\u0133\u0134\7f\2\2\u0134F\3\2\2\2\u0135\u0136\7c\2\2\u0136"+
		"\u0137\7p\2\2\u0137\u0138\7k\2\2\u0138\u0139\7o\2\2\u0139\u013a\7c\2\2"+
		"\u013a\u013b\7v\2\2\u013b\u013c\7k\2\2\u013c\u013d\7q\2\2\u013d\u013e"+
		"\7p\2\2\u013eH\3\2\2\2\u013f\u0140\7x\2\2\u0140\u0141\7k\2\2\u0141\u0142"+
		"\7g\2\2\u0142\u0143\7y\2\2\u0143\u0144\7r\2\2\u0144\u0145\7q\2\2\u0145"+
		"\u0146\7t\2\2\u0146\u0147\7v\2\2\u0147J\3\2\2\2\u0148\u0149\7-\2\2\u0149"+
		"\u014a\7-\2\2\u014aL\3\2\2\2\u014b\u014c\7q\2\2\u014c\u014d\7p\2\2\u014d"+
		"N\3\2\2\2\u014e\u014f\7w\2\2\u014f\u0150\7r\2\2\u0150\u0151\7f\2\2\u0151"+
		"\u0152\7c\2\2\u0152\u0153\7v\2\2\u0153\u0154\7g\2\2\u0154P\3\2\2\2\u0155"+
		"\u0156\7u\2\2\u0156\u0157\7j\2\2\u0157\u0158\7q\2\2\u0158\u0159\7y\2\2"+
		"\u0159R\3\2\2\2\u015a\u015b\7r\2\2\u015b\u015c\7c\2\2\u015c\u015d\7w\2"+
		"\2\u015d\u015e\7u\2\2\u015e\u015f\7g\2\2\u015fT\3\2\2\2\u0160\u0161\7"+
		"r\2\2\u0161\u0162\7n\2\2\u0162\u0163\7c\2\2\u0163\u0164\7{\2\2\u0164V"+
		"\3\2\2\2\u0165\u0166\7-\2\2\u0166X\3\2\2\2\u0167\u0168\7p\2\2\u0168\u0169"+
		"\7q\2\2\u0169\u016a\7v\2\2\u016aZ\3\2\2\2\u016b\u016c\7,\2\2\u016c\\\3"+
		"\2\2\2\u016d\u016e\7\61\2\2\u016e^\3\2\2\2\u016f\u0170\7\'\2\2\u0170`"+
		"\3\2\2\2\u0171\u0172\7@\2\2\u0172\u0173\7?\2\2\u0173b\3\2\2\2\u0174\u0175"+
		"\7>\2\2\u0175\u0176\7?\2\2\u0176d\3\2\2\2\u0177\u0178\7?\2\2\u0178\u0179"+
		"\7?\2\2\u0179f\3\2\2\2\u017a\u017b\7#\2\2\u017b\u017c\7?\2\2\u017ch\3"+
		"\2\2\2\u017d\u017e\7c\2\2\u017e\u017f\7p\2\2\u017f\u0180\7f\2\2\u0180"+
		"j\3\2\2\2\u0181\u0182\7q\2\2\u0182\u0183\7t\2\2\u0183l\3\2\2\2\u0184\u0185"+
		"\7*\2\2\u0185n\3\2\2\2\u0186\u0187\7+\2\2\u0187p\3\2\2\2\u0188\u0189\7"+
		"t\2\2\u0189\u018a\7g\2\2\u018a\u018b\7c\2\2\u018b\u018c\7f\2\2\u018cr"+
		"\3\2\2\2\u018d\u018e\7]\2\2\u018e\u018f\7r\2\2\u018f\u0190\7t\2\2\u0190"+
		"\u0191\7q\2\2\u0191\u0192\7o\2\2\u0192\u0193\7r\2\2\u0193\u0194\7v\2\2"+
		"\u0194\u0195\7?\2\2\u0195t\3\2\2\2\u0196\u0197\7}\2\2\u0197\u0198\7}\2"+
		"\2\u0198v\3\2\2\2\u0199\u019a\7\177\2\2\u019a\u019b\7\177\2\2\u019bx\3"+
		"\2\2\2\u019c\u019d\7<\2\2\u019dz\3\2\2\2\u019e\u019f\7p\2\2\u019f\u01a0"+
		"\7w\2\2\u01a0\u01a1\7o\2\2\u01a1\u01a2\7d\2\2\u01a2\u01a3\7g\2\2\u01a3"+
		"\u01a4\7t\2\2\u01a4|\3\2\2\2\u01a5\u01a6\7r\2\2\u01a6\u01a7\7q\2\2\u01a7"+
		"\u01a8\7k\2\2\u01a8\u01a9\7p\2\2\u01a9\u01aa\7v\2\2\u01aa~\3\2\2\2\u01ab"+
		"\u01ac\7n\2\2\u01ac\u01ad\7k\2\2\u01ad\u01ae\7u\2\2\u01ae\u01af\7v\2\2"+
		"\u01af\u0080\3\2\2\2\u01b0\u01b1\7u\2\2\u01b1\u01b2\7v\2\2\u01b2\u01b3"+
		"\7t\2\2\u01b3\u01b4\7k\2\2\u01b4\u01b5\7p\2\2\u01b5\u01b6\7i\2\2\u01b6"+
		"\u0082\3\2\2\2\u01b7\u01b8\7d\2\2\u01b8\u01b9\7q\2\2\u01b9\u01ba\7q\2"+
		"\2\u01ba\u01bb\7n\2\2\u01bb\u01bc\7g\2\2\u01bc\u01bd\7c\2\2\u01bd\u01be"+
		"\7p\2\2\u01be\u0084\3\2\2\2\u01bf\u01c0\7u\2\2\u01c0\u01c1\7v\2\2\u01c1"+
		"\u01c2\7g\2\2\u01c2\u01c3\7r\2\2\u01c3\u0086\3\2\2\2\u01c4\u01c5\7o\2"+
		"\2\u01c5\u01c6\7c\2\2\u01c6\u01c7\7t\2\2\u01c7\u01c8\7i\2\2\u01c8\u01c9"+
		"\7k\2\2\u01c9\u01ca\7p\2\2\u01ca\u0088\3\2\2\2\u01cb\u01cc\7e\2\2\u01cc"+
		"\u01cd\7q\2\2\u01cd\u01ce\7n\2\2\u01ce\u01cf\7q\2\2\u01cf\u01d0\7t\2\2"+
		"\u01d0\u008a\3\2\2\2\u01d1\u01d2\7n\2\2\u01d2\u01d3\7k\2\2\u01d3\u01d4"+
		"\7p\2\2\u01d4\u01d5\7g\2\2\u01d5\u008c\3\2\2\2\u01d6\u01d7\7k\2\2\u01d7"+
		"\u01d8\7p\2\2\u01d8\u01d9\7k\2\2\u01d9\u01da\7v\2\2\u01da\u01db\7k\2\2"+
		"\u01db\u01dc\7c\2\2\u01dc\u01dd\7n\2\2\u01dd\u008e\3\2\2\2\u01de\u01df"+
		"\7c\2\2\u01df\u01e0\7e\2\2\u01e0\u01e1\7e\2\2\u01e1\u01e2\7g\2\2\u01e2"+
		"\u01e3\7r\2\2\u01e3\u01e4\7v\2\2\u01e4\u01e5\7k\2\2\u01e5\u01e6\7p\2\2"+
		"\u01e6\u01e7\7i\2\2\u01e7\u0090\3\2\2\2\u01e8\u01e9\7c\2\2\u01e9\u01ea"+
		"\7n\2\2\u01ea\u01eb\7k\2\2\u01eb\u01ec\7i\2\2\u01ec\u01ed\7p\2\2\u01ed"+
		"\u0092\3\2\2\2\u01ee\u01ef\7u\2\2\u01ef\u01f0\7n\2\2\u01f0\u01f1\7q\2"+
		"\2\u01f1\u01f2\7r\2\2\u01f2\u01f3\7g\2\2\u01f3\u0094\3\2\2\2\u01f4\u01f5"+
		"\7j\2\2\u01f5\u01f6\7k\2\2\u01f6\u01f7\7i\2\2\u01f7\u01f8\7j\2\2\u01f8"+
		"\u01f9\7n\2\2\u01f9\u01fa\7k\2\2\u01fa\u01fb\7i\2\2\u01fb\u01fc\7j\2\2"+
		"\u01fc\u01fd\7v\2\2\u01fd\u01fe\7g\2\2\u01fe\u01ff\7f\2\2\u01ff\u0096"+
		"\3\2\2\2\u0200\u0202\t\2\2\2\u0201\u0200\3\2\2\2\u0201\u0202\3\2\2\2\u0202"+
		"\u0204\3\2\2\2\u0203\u0205\t\3\2\2\u0204\u0203\3\2\2\2\u0205\u0206\3\2"+
		"\2\2\u0206\u0204\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u020e\3\2\2\2\u0208"+
		"\u020a\7\60\2\2\u0209\u020b\t\3\2\2\u020a\u0209\3\2\2\2\u020b\u020c\3"+
		"\2\2\2\u020c\u020a\3\2\2\2\u020c\u020d\3\2\2\2\u020d\u020f\3\2\2\2\u020e"+
		"\u0208\3\2\2\2\u020e\u020f\3\2\2\2\u020f\u0098\3\2\2\2\u0210\u0214\t\4"+
		"\2\2\u0211\u0213\t\5\2\2\u0212\u0211\3\2\2\2\u0213\u0216\3\2\2\2\u0214"+
		"\u0212\3\2\2\2\u0214\u0215\3\2\2\2\u0215\u009a\3\2\2\2\u0216\u0214\3\2"+
		"\2\2\u0217\u021b\t\6\2\2\u0218\u021a\t\5\2\2\u0219\u0218\3\2\2\2\u021a"+
		"\u021d\3\2\2\2\u021b\u0219\3\2\2\2\u021b\u021c\3\2\2\2\u021c\u021e\3\2"+
		"\2\2\u021d\u021b\3\2\2\2\u021e\u021f\t\6\2\2\u021f\u009c\3\2\2\2\u0220"+
		"\u0224\7$\2\2\u0221\u0223\13\2\2\2\u0222\u0221\3\2\2\2\u0223\u0226\3\2"+
		"\2\2\u0224\u0225\3\2\2\2\u0224\u0222\3\2\2\2\u0225\u0227\3\2\2\2\u0226"+
		"\u0224\3\2\2\2\u0227\u0228\7$\2\2\u0228\u009e\3\2\2\2\u0229\u022b\t\7"+
		"\2\2\u022a\u0229\3\2\2\2\u022b\u022c\3\2\2\2\u022c\u022a\3\2\2\2\u022c"+
		"\u022d\3\2\2\2\u022d\u022e\3\2\2\2\u022e\u022f\bP\2\2\u022f\u00a0\3\2"+
		"\2\2\u0230\u0232\7\17\2\2\u0231\u0230\3\2\2\2\u0231\u0232\3\2\2\2\u0232"+
		"\u0233\3\2\2\2\u0233\u0234\7\f\2\2\u0234\u0235\3\2\2\2\u0235\u0236\bQ"+
		"\2\2\u0236\u00a2\3\2\2\2\u0237\u0238\t\b\2\2\u0238\u023c\t\b\2\2\u0239"+
		"\u023b\13\2\2\2\u023a\u0239\3\2\2\2\u023b\u023e\3\2\2\2\u023c\u023d\3"+
		"\2\2\2\u023c\u023a\3\2\2\2\u023d\u023f\3\2\2\2\u023e\u023c\3\2\2\2\u023f"+
		"\u0240\5\u00a1Q\2\u0240\u0241\3\2\2\2\u0241\u0242\bR\2\2\u0242\u00a4\3"+
		"\2\2\2\u0243\u0244\7\61\2\2\u0244\u0245\7,\2\2\u0245\u0249\3\2\2\2\u0246"+
		"\u0248\13\2\2\2\u0247\u0246\3\2\2\2\u0248\u024b\3\2\2\2\u0249\u024a\3"+
		"\2\2\2\u0249\u0247\3\2\2\2\u024a\u024c\3\2\2\2\u024b\u0249\3\2\2\2\u024c"+
		"\u024d\7,\2\2\u024d\u024e\7\61\2\2\u024e\u024f\3\2\2\2\u024f\u0250\bS"+
		"\2\2\u0250\u00a6\3\2\2\2\u0251\u0252\13\2\2\2\u0252\u00a8\3\2\2\2\16\2"+
		"\u0201\u0206\u020c\u020e\u0214\u021b\u0224\u022c\u0231\u023c\u0249\3\b"+
		"\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}